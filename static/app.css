@font-face {
  font-family: 'IBM VGA 8x16';
  src: url(WebPlus_IBM_VGA_8x16.woff) format('woff');
  font-weight: normal;
  font-style: normal;
}

:root {
  --black: #000;
  --blue: #00a;
  --green: #0a0;
  --cyan: #0aa;
  --red: #a00;
  --magenta: #a0a;
  --brown: #a50;
  --white: #aaa;
  --bright-black: #555;
  --bright-blue: #55f;
  --bright-green: #5f5;
  --bright-cyan: #5ff;
  --bright-red: #f55;
  --bright-magenta: #f5f;
  --yellow: #ff5;
  --bright-white: #fff;

  --scale-factor: 2.25;
  --glyph-height-px: 16;
  --glyph-width-px: 8;
  --glyph-height: calc(1px * var(--scale-factor) * var(--glyph-height-px));
  --glyph-width: calc(1px * var(--scale-factor) * var(--glyph-width-px));
  --aspect-correction: calc((4.0 / 3.0) / ((80.0 * var(--glyph-width-px)) / (25.0 * var(--glyph-height-px))));

  --input-padding: var(--glyph-width);
}

*,
*::before,
*::after {
  box-sizing: border-box;
}

html {
  background-color: var(--bright-black);
  background-size: calc(var(--scale-factor) * 4px) calc(var(--scale-factor) * 2px);
}

body {
  -webkit-text-size-adjust: none;
  text-size-adjust: none;
  transform: scaleX(var(--aspect-correction));
  transform-origin: left;
  overflow-x: hidden;
  width: calc(100% / var(--aspect-correction));
}

* {
  font-family: "IBM VGA 8x16", monospace;
  font-size: var(--glyph-height);
  font-weight: normal;
  font-style: normal;
  line-height: var(--glyph-height);
  margin: 0;
  color: var(--black);
  border: none;
  outline: none;
  border-radius: 0;
  appearance: none;
}

main {
  margin: 0 auto;
  max-width: calc(89 * var(--glyph-width));
}

article {
  box-shadow: calc(var(--glyph-width)) var(--glyph-height) rgba(0, 0, 0, 0.6);
}

.print {
  display: none;
}

/* buttons */

.buttons>* {
  /* margin-top: calc(var(--glyph-height) / 2); */
  margin-right: calc(2 * var(--glyph-width));
}

.buttons:last-child {
  margin-right: 0;
}

button {
  padding: 0 var(--glyph-width);
  box-shadow: calc(var(--glyph-width)) calc(var(--glyph-height) / 2) rgba(0, 0, 0, 0.6);
  color: var(--bright-cyan);
  background-color: var(--magenta);
}

button:hover,
button:focus,
button:focus-visible {
  background-color: var(--bright-red);
  outline: none;
}

button:active {
  translate: calc(var(--glyph-width));
  box-shadow: none;
}

/* fieldset */

fieldset {
  --border-width: 2px 4px 2px 4px;
  --border-1-inset: 10px 4px 16px 4px;
  --border-2-inset: 14px 10px 20px 10px;
  position: relative;
  padding: var(--glyph-height) calc(2 * var(--glyph-width)) var(--glyph-height) calc(2 * var(--glyph-width));
  background-color: var(--white);
}

fieldset:before {
  content: "";
  position: absolute;
  border: solid var(--black);
  border-width: var(--border-width);
  inset: var(--border-1-inset);
  pointer-events: none;

}

fieldset:after {
  content: "";
  position: absolute;
  border: solid var(--black);
  border-width: var(--border-width);
  inset: var(--border-2-inset);
  z-index: 0;
  pointer-events: none;
}

fieldset>legend {
  position: absolute;
  display: block;
  margin-top: calc(-1 * var(--glyph-height));
  margin-left: var(--glyph-width);
  padding: 0 var(--glyph-width);
  background-color: inherit;
  z-index: 1;
  color: var(--black);
}

/* inputs */

textarea,
select,
option,
input {
  display: inline-block;
  padding: 0 var(--input-padding);
  background-color: var(--black);
  color: var(--bright-white);
  box-sizing: content-box;
  width: calc(100% - 2 * var(--input-padding));
}

textarea::selection,
select::selection,
input::selection {
  background-color: var(--bright-blue);
  color: var(--bright-white);
}

select,
option,
input {
  height: var(--glyph-height);
}

textarea {
  min-width: calc(10 * var(--glyph-width));
  min-height: calc(2 * var(--glyph-height));
  vertical-align: bottom;
  resize: vertical;
  overflow-x: hidden;
}

/* checkbox */

input[type=checkbox] {
  position: absolute;
  width: 0;
  opacity: 0;
}

input[type="checkbox"]+span {
  color: var(--black);
  width: 3ch;
  display: inline-block;
}

input[type="checkbox"]:not(:checked)+span::after {
  content: "[ ]";
}

input[type="checkbox"]:checked+span::after {
  content: "[X]";
}

/* label */

label:hover span,
label:has(select:focus, input:focus, textarea:focus) span {
  color: var(--bright-white);
}

/* scrollbar */

textarea::-webkit-scrollbar {
  width: var(--glyph-width);
  height: var(--glyph-width);
  background-image: url("./bright-black-bg.svg");
  background-size: calc(var(--scale-factor) * 2px) calc(var(--scale-factor) * 2px);
  background-color: var(--white);
}

textarea::-webkit-scrollbar-thumb {
  background-color: var(--bright-black);
}

textarea::-webkit-scrollbar-corner {
  background-color: var(--black);
  background-size: calc(var(--scale-factor) * 2px) calc(var(--scale-factor) * 2px);
  border: none;
}

/* @media */

@media print {
  :root {
    --scale-factor: 2.25;
  }

  * {
    background-color: white;
  }

  main {
    display: none;
  }

  .print {
    display: block;
  }
}

@media (max-width: 1280px) {
  :root {
    --scale-factor: 1.5;
  }

  fieldset {
    --border-width: 1.5px 2.5px 1.5px 2.5px;
    --border-1-inset: 8px 3px 12px 3px;
    --border-2-inset: 10px 8px 15px 8px;
  }
}

@media (max-width: 800px) {
  :root {
    --scale-factor: 1.125;
  }

  fieldset {
    --border-width: 1px 2px 1px 2px;
    --border-1-inset: 5px 2px 8px 2px;
    --border-2-inset: 7px 6px 10px 6px;
  }
}
